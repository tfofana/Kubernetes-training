# Conversion de la donnée sensible en base64

centos@k8s:~$ echo -n "mongodb://admin:algo1511e@mgserveur1.org/mgmt" | base64 
bW9uZ29kYjovL2FkbWluOmFsZ28xNTExZUBtZ3NlcnZldXIxLm9yZy9tZ210

# Spécification de l'objet Secret 

centos@k8s:~$ nano mongo-creds.yaml
apiVersion: v1
Kind: Secret
metadata:
  name: mongo-creds
data:
  mongoURL: bW9uZ29kYjovL2FkbWluOmFsZ28xNTExZUBtZ3NlcnZldXIxLm9yZy9tZ210

Création de l'objet Secret
centos@k8s:~$ kubectl create -f ./mongo-creds.yaml
centos@k8s:~$ kubectl create -f ./mongo-creds.yaml
secret/mongo-creds created

###########################L###ister les différents secrets #########################################
centos@k8s:~$ kubectl get Secrets
NAME               TYPE     DATA   AGE
mongo-creds        Opaque   1      42s
service-creds001   Opaque   2      67m
service-creds002   Opaque   2      65m

#####################################################################################################
        Utilisation des Secrets de type generic dans un pod: cas1 (volume1)
#####################################################################################################
centos@k8s:~$ nano pod-secret-volume-1.yaml
apiVersion: v1
kind: Pod
metadata:
  name: alpine
spec:
  containers:
  - image: alpine
    name: alpine
    command:
    - "sleep"
    - "10000"
    volumeMounts:
    - name: creds
      mountPath: "/etc/creds"
      readOnly: true
  volumes:
  - name: creds
    secret:
      secretName: mongo-creds

# Création du Pod alpine
centos@k8s:~$ kubectl create -f pod-secret-volume-1.yaml
pod/alpine created


# Lancement d'un shell intéractif dans le container alpine
$ kubectl exec -ti alpine -- sh
/ # cat /etc/creds/mongoURL
mongodb://admin:algo1511e@mgserveur1.org/mgmt/ 



#####################################################################################################
        Utilisation des Secrets de type generic dans un pod: cas2 (volume2)
#####################################################################################################
centos@k8s:~$ nano pod-secret-volume-2.yaml
apiVersion: v1
kind: Pod
metadata:
  name: alpine2
spec:
  containers:
  - image: alpine
    name: alpine2
    command:
    - "sleep"
    - "10000"
    volumeMounts:
    - name: creds
      mountPath: "/etc/creds"
      readOnly: true
  volumes:
  - name: creds
    secret:
      secretName: service-creds
      items:
      - key: username.txt
        path: service/user
      - key: password.txt
        path: service/pass

# Création du Pod alpine
centos@k8s:~$ kubectl create -f pod-secret-volume-2.yaml
pod/alpine2 created

# Lancement d'un shell intéractif dans le container alpine
$ kubectl exec -ti alpine2 -- sh
/ # cat /etc/creds/service/user
admin/ # 
/ # cat /etc/creds/service/pass
algo1511e/ #